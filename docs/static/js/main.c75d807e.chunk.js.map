{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","hooks/useFetchGifs.js","components/GifGridItem.js","components/GifGrid.js","GitExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categ","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","useFetchGifs","loading","state","setState","useEffect","then","imgs","GifGridItem","className","src","alt","GifGrid","GitExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAmCeA,EAhCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAErB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACE,sBAAMC,SAVa,SAACC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAYP,GAAZ,mBAA2BO,OACzCN,EAAc,MAMhB,SACE,uBACEO,KAAK,OACLC,MAAQT,EACRU,SAlBoB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,a,+BCPrBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACRC,EADQ,iDACyCC,UAAWH,GADpD,+DAEMI,MAAMF,GAFZ,cAERG,EAFQ,gBAGUA,EAAKC,OAHf,uBAGNC,EAHM,EAGNA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC5B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATxB,kBAaPM,GAbO,4CAAH,sDAgBIT,ICOFgB,EApBa,SAAEf,GAC5B,MAA0Bd,mBAAS,CACjCqB,KAAK,GACLS,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAgBA,OAVAC,qBAAU,WACRpB,EAAQC,GACLoB,MAAM,SAAAC,GACLH,EAAS,CACPX,KAAKc,EACLL,SAAS,SAGd,CAAChB,IAEGiB,GCVOK,EATI,SAAC,GAAoB,IAAlBV,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAC3B,OACE,sBAAKqB,UAAU,uDAAf,UACE,qBAAKC,IAAMtB,EAAMuB,IAAMb,IACvB,4BAAKA,QCoBGc,EAtBC,SAAC,GAAkB,IAAhB1B,EAAe,EAAfA,SAEjB,EAAkCe,EAAcf,GAAlCa,EAAd,EAAQN,KAAcS,EAAtB,EAAsBA,QAGtB,OACE,qCACE,oBAAIO,UAAU,kDAAd,SAAkEvB,IAEjEgB,GAAW,mBAAGO,UAAU,iDAAb,qBAEZ,qBAAKA,UAAU,YAAf,SAEIV,EAAOJ,KAAK,SAAAC,GAAG,OACb,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aCWnBgB,EAzBM,WAEnB,MAAoCzC,mBAAS,CAAC,cAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAIA,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BAEI2C,EAAWnB,KAAI,SAAAT,GAAQ,OACrB,cAAC,EAAD,CAEEA,SAAUA,GADLA,Y,MCZnB6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c75d807e.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if( inputValue.trim().length > 0) {\r\n      setCategories((categ) => [inputValue, ...categ])\r\n      setInputValue('');\r\n    };\r\n\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={ handleSubmit }>\r\n      <input\r\n        type=\"text\"\r\n        value={ inputValue }\r\n        onChange={ handleInputChange }\r\n      />\r\n    </form>\r\n  )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory;\r\n","\r\nconst getGifs = async( category ) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=mIeXcwmZ7fFW9SoCirLrEp4rY9O9ERhr`;\r\n  const resp  = await fetch(url);\r\n  const { data } =  await resp.json();\r\n\r\n  const gifs = data.map( img => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url\r\n    }\r\n  });\r\n\r\n  return gifs;\r\n}\r\n\r\n  export default getGifs;","import { useEffect, useState } from \"react\";\r\nimport getGifs from \"../helpers/getGifs\";\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n  const [state, setState] = useState({\r\n    data:[],\r\n    loading: true\r\n  });\r\n\r\n  // un efecto no puede ser async\r\n  useEffect(() => {\r\n    getGifs(category)\r\n      .then( imgs => {\r\n        setState({\r\n          data:imgs,\r\n          loading: false\r\n        });\r\n      })\r\n  }, [category]); \r\n\r\n  return state;\r\n}\r\n\r\nexport default useFetchGifs;"," \r\n\r\nconst GifGridItem = ({ title, url }) => {\r\n   return (\r\n     <div className=\"card animate__animated animate__fadeIn animate__fast\">\r\n       <img src={ url } alt={ title } />\r\n       <p>{ title }</p>\r\n     </div>\r\n   )\r\n }\r\n \r\n export default GifGridItem;","\r\nimport useFetchGifs from \"../hooks/useFetchGifs\";\r\nimport GifGridItem from \"./GifGridItem\";\r\n\r\nconst GifGrid = ({ category }) => {\r\n\r\n  const { data: images, loading } = useFetchGifs( category );\r\n  \r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"animate__animated animate__fadeIn animate__fast\">{ category }</h3>\r\n      \r\n      {loading && <p className=\"animate__animated animate__flash animate__fast\">Loading</p> }\r\n\r\n      <div className=\"card-grid\">\r\n        {\r\n          images.map( img => (\r\n            <GifGridItem key={img.id} {...img} />\r\n          ))\r\n        }\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default GifGrid;\r\n","import { useState } from \"react\";\r\nimport AddCategory from \"./components/AddCategory\";\r\nimport GifGrid from \"./components/GifGrid\";\r\n\r\nconst GitExpertApp = () => {\r\n\r\n  const [categories, setCategories] = useState(['One Punch']);\r\n\r\n  // API Key\r\n// mIeXcwmZ7fFW9SoCirLrEp4rY9O9ERhr\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategories={setCategories} />\r\n      <hr />\r\n      <ol>\r\n        {\r\n          categories.map(category => (\r\n            <GifGrid\r\n              key={category}\r\n              category={category}\r\n            />\r\n          ))\r\n        }\r\n      </ol>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default GitExpertApp;\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GitExpertApp from './GitExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n  <GitExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}